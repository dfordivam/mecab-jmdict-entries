{-# LANGUAGE ParallelListComp #-}

module MecabEntry where

import Protolude hiding (to, (&))
import           Control.Lens
import qualified Data.List.NonEmpty as NE
import Data.List.NonEmpty (NonEmpty(..))
import qualified Data.Text as T
import qualified Data.Text.IO as T
import qualified Data.Set as Set
import           Data.Set (Set)
import qualified Data.Map as Map
import Data.Maybe
import Data.IORef
import Text.Read
import Data.JMDict.AST
import Data.Char
import Text.Pretty.Simple
import qualified Data.Conduit.List
import qualified Data.JMDict.XML.Parser as X
import Data.JMDict.AST.Parser hiding (isKana)
import Text.XML.Stream.Parse hiding (anyOf)
import Control.Monad.Trans.Resource
import NLP.Japanese.Utils
import Data.Binary
import Data.Conduit
import Control.Monad.Writer hiding ((<>))
import Control.Exception (assert)
import Text.MeCab
import qualified Data.ByteString.Lazy as BSL

data MecabEntry = MecabEntry
  { _mecabEntrySurface :: Text
  , _mecabEntryNumber  :: Int -- 2 and 3 field, same number
  , _mecabEntryRanking :: Int -- lower value means higher priority
  , _mecabEntryMainPOS :: Text -- t5
  , _mecabEntryPOS     :: Maybe Text -- t6
  , _mecabEntryRule    :: Maybe Text -- t9
  , _mecabEntryConj    :: Maybe Text -- t10
  , _mecabEntryDictForm :: Text -- t11 -- same as JMDict kanjiPhrase/readingPhrase
  , _mecabEntryReading  :: Text -- t12,t13 Katakana
  }
  deriving (Show)

renderEntry :: MecabEntry -> Text
renderEntry (MecabEntry s n r t5 t6 t9 t10 t11 t12)
  = mconcat $ intersperse ","
  [s, tshow n, tshow n, tshow r, t5
  , f t6, "*", "*", f t9, f t10, t11, t12, t12]
  where
    f (Just t) = t
    f Nothing = "*"
    tshow = T.pack . show

-- 1 見づら～いっ
-- 2 ,19
-- 3 ,19
-- 4 ,6795
-- 5 ,形容詞
-- 6 ,自立
-- 7 ,*
-- 8 ,*
-- 9 ,形容詞・アウオ段
-- 10,基本形
-- 11,見づらい
-- 12,ミヅラーイッ
-- 13,ミズラーイッ

type ParseWrM = Writer
  ((Set Int -- t23
  , Set Int) -- t4i
  , Set Text -- t5
  , (Set (Maybe Text) -- t6
  , Set (Maybe Text) -- t7
  , Set (Maybe Text) -- t8
  , Set (Maybe Text) -- t9
  , Set (Maybe Text))) -- t10


makeMecabSets fp = do
  fc <- T.readFile fp
  return (parseAll $ T.lines fc)
  where
    parseAll ls = execWriter (mapM parseOneLine ls)
    parseOneLine :: Text -> ParseWrM ()
    parseOneLine l = case T.splitOn "," l of
      (t1:t2:t3:t4:t5:t6:t7:t8:t9:t10:t11:t12:t13:[]) ->
        tell ((t23, Set.singleton t4i), t5v
             , (h t6, h t7, h t8, h t9, h t10))
        where
          t23 = assert (t2i == t3i) $ Set.singleton $ t2i
          (Just t2i) = readMaybe $ T.unpack t2
          (Just t3i) = readMaybe $ T.unpack t3
          (Just t4i) = readMaybe $ T.unpack t4
          t5v = assert (not $ T.null t5) $ Set.singleton $ t5
          h t = Set.singleton $ case t of
            "*" -> Nothing
            _ -> Just t

-- Verbs.csv
-- t2, t3 (561, 1280)
-- t4 (2731, 15396)
-- t5 動詞
-- t6 "接尾", "自立", "非自立"
-- t7 Nothing
-- t8 Nothing
-- t9
    -- [ "カ変・クル"
    -- , "カ変・来ル"
    -- , "サ変・−スル"
    -- , "サ変・−ズル"
    -- , "サ変・スル"
    -- , "ラ変"
    -- , "一段"
    -- , "一段・クレル"
    -- , "一段・得ル"
    -- , "上二・ダ行"
    -- , "上二・ハ行"
    -- , "下二・カ行"
    -- , "下二・ガ行"
    -- , "下二・ダ行"
    -- , "下二・ハ行"
    -- , "下二・マ行"
    -- , "下二・得"
    -- , "五段・カ行イ音便"
    -- , "五段・カ行促音便"
    -- , "五段・カ行促音便ユク"
    -- , "五段・ガ行"
    -- , "五段・サ行"
    -- , "五段・タ行"
    -- , "五段・ナ行"
    -- , "五段・バ行"
    -- , "五段・マ行"
    -- , "五段・ラ行"
    -- , "五段・ラ行特殊"
    -- , "五段・ワ行ウ音便"
    -- , "五段・ワ行促音便"
    -- , "四段・サ行"
    -- , "四段・タ行"
    -- , "四段・ハ行"
    -- , "四段・バ行"
-- t10
    -- [ "仮定形"
    -- , "仮定縮約１"
    -- , "体言接続"
    -- , "体言接続特殊"
    -- , "体言接続特殊２"
    -- , "命令ｅ"
    -- , "命令ｉ"
    -- , "命令ｒｏ"
    -- , "命令ｙｏ"
    -- , "基本形"
    -- , "文語基本形"
    -- , "未然ウ接続"
    -- , "未然ヌ接続"
    -- , "未然レル接続"
    -- , "未然形"
    -- , "未然特殊"
    -- , "現代基本形"
    -- , "連用タ接続"
    -- , "連用形"

-- 逆らえる,619,619,7150,動詞,自立,*,*,一段,基本形,逆らえる,サカラエル,サカラエル
-- 逆らえ,622,622,7150,動詞,自立,*,*,一段,未然形,逆らえる,サカラエ,サカラエ
-- 逆らえよ,621,621,7150,動詞,自立,*,*,一段,未然ウ接続,逆らえる,サカラエヨ,サカラエヨ
-- 逆らえ,625,625,7150,動詞,自立,*,*,一段,連用形,逆らえる,サカラエ,サカラエ
-- 逆らえれ,617,617,7150,動詞,自立,*,*,一段,仮定形,逆らえる,サカラエレ,サカラエレ
-- 逆らえよ,624,624,7150,動詞,自立,*,*,一段,命令ｙｏ,逆らえる,サカラエヨ,サカラエヨ
-- 逆らえろ,623,623,7150,動詞,自立,*,*,一段,命令ｒｏ,逆らえる,サカラエロ,サカラエロ
-- 逆らえりゃ,618,618,7150,動詞,自立,*,*,一段,仮定縮約１,逆らえる,サカラエリャ,サカラエリャ
-- 逆らえん,620,620,7150,動詞,自立,*,*,一段,体言接続特殊,逆らえる,サカラエン,サカラエン

getKatakana (ReadingPhrase rp) = hiraganaToKatakana rp

makeIchidanMecabEntries
  :: (Surface, ReadingPhrase)
  -> [MecabEntry]
makeIchidanMecabEntries (s,rp) =
  [MecabEntry su i 7150 "動詞" t6 (Just "一段") t10 s t12
   | su <- surfaces
   | t10 <- types
   | t12 <- readings]
  where
    i = 610
    t6 = Just "自立"
    stem = assert (T.last s == 'る') (T.init s)
    surfaces = map (\e -> stem <> e) endings
    readings = map (\e -> (T.init $ getKatakana rp)
                     <> (hiraganaToKatakana e)) endings
    types = map Just
      [ "基本形"
      , "未然形"
      , "未然ウ接続"
      , "連用形"
      , "仮定形"
      , "命令ｙｏ"
      , "命令ｒｏ"
      , "仮定縮約１"
      , "体言接続特殊"]

    endings =
      [ "る"
      , ""
      , "よ"
      , ""
      , "れ"
      , "よ"
      , "ろ"
      , "りゃ"
      , "ん"]


makeGodanMecabEntries (s,rp) end =
  [MecabEntry su i 7150 "動詞" t6 t7 t10 s t12
   | su <- surfaces
   | t10 <- types
   | t12 <- readings]
  where
    i = 610
    t6 = Just "自立"
    stem = (T.init s)
    surfaces = map (\e -> stem <> e) endings
    readings = map (\e -> (T.init $ getKatakana rp)
                     <> (hiraganaToKatakana e)) endings
    endings = map fst es
    types = map snd es
    t7 = Just t7t
    (es, t7t) = case end of
       KuEnding -> (,) kuEndings "五段・カ行イ音便"
       GuEnding -> (,) guEndings "五段・ガ行"
       SuEnding -> (,) suEndings "五段・サ行"
       TuEnding -> (,) tuEndings "五段・タ行"
       NuEnding -> (,) nuEndings "五段・ナ行"
       BuEnding -> (,) buEndings "五段・バ行"
       MuEnding -> (,) muEndings "五段・マ行"
       RuEnding -> (,) ruEndings "五段・ラ行"
       UEnding ->  (,) uEndings "五段・ワ行促音便" -- <= prefer

       -- GodanAru -> "五段・ラ行特殊"
       -- UEnding -> "五段・ワ行ウ音便"
       -- IkuYuku -> "五段・カ行促音便" -- 行く
       -- IkuYuku -> "五段・カ行促音便ユク"


-- やじる,772,772,9279,動詞,自立,*,*,五段・ラ行,基本形,やじる,ヤジル,ヤジル
-- やじら,780,780,9279,動詞,自立,*,*,五段・ラ行,未然形,やじる,ヤジラ,ヤジラ
-- やじん,782,782,9279,動詞,自立,*,*,五段・ラ行,未然特殊,やじる,ヤジン,ヤジン
-- やじろ,778,778,9279,動詞,自立,*,*,五段・ラ行,未然ウ接続,やじる,ヤジロ,ヤジロ
-- やじり,788,788,9279,動詞,自立,*,*,五段・ラ行,連用形,やじる,ヤジリ,ヤジリ
-- やじっ,786,786,9279,動詞,自立,*,*,五段・ラ行,連用タ接続,やじる,ヤジッ,ヤジッ
-- やじれ,768,768,9279,動詞,自立,*,*,五段・ラ行,仮定形,やじる,ヤジレ,ヤジレ
-- やじれ,784,784,9279,動詞,自立,*,*,五段・ラ行,命令ｅ,やじる,ヤジレ,ヤジレ
-- やじりゃ,770,770,9279,動詞,自立,*,*,五段・ラ行,仮定縮約１,やじる,ヤジリャ,ヤジリャ
-- やじん,774,774,9279,動詞,自立,*,*,五段・ラ行,体言接続特殊,やじる,ヤジン,ヤジン
-- やじ,776,776,9287,動詞,自立,*,*,五段・ラ行,体言接続特殊２,やじる,ヤジ,ヤジ

ruEndings = map (\(a,b) -> (a, Just b))
      [ ("る", "基本形")
      , ("ら", "未然形")
      , ("ん", "未然特殊")
      , ("ろ", "未然ウ接続")
      , ("り", "連用形")
      , ("っ", "連用タ接続")
      , ("れ", "仮定形")
      , ("れ", "命令ｅ")
      , ("りゃ", "仮定縮約１")
      , ("ん", "体言接続特殊")
      , ("", "体言接続特殊２")]

-- きずく,679,679,9279,動詞,自立,*,*,五段・カ行イ音便,基本形,きずく,キズク,キズク
-- きずか,683,683,9279,動詞,自立,*,*,五段・カ行イ音便,未然形,きずく,キズカ,キズカ
-- きずこ,681,681,9279,動詞,自立,*,*,五段・カ行イ音便,未然ウ接続,きずく,キズコ,キズコ
-- きずき,689,689,9279,動詞,自立,*,*,五段・カ行イ音便,連用形,きずく,キズキ,キズキ
-- きずい,687,687,9279,動詞,自立,*,*,五段・カ行イ音便,連用タ接続,きずく,キズイ,キズイ
-- きずけ,675,675,9279,動詞,自立,*,*,五段・カ行イ音便,仮定形,きずく,キズケ,キズケ
-- きずけ,685,685,9279,動詞,自立,*,*,五段・カ行イ音便,命令ｅ,きずく,キズケ,キズケ
-- きずきゃ,677,677,9279,動詞,自立,*,*,五段・カ行イ音便,仮定縮約１,きずく,キズキャ,キズキャ

kuEndings = map (\(a,b) -> (a, Just b))
       [ ("く" , "基本形")
       , ("か" , "未然形")
       , ("こ" , "未然ウ接続")
       , ("き" , "連用形")
       , ("い" , "連用タ接続")
       , ("け" , "仮定形")
       , ("け" , "命令ｅ")
       , ("きゃ", "仮定縮約１")]

-- せめぐ,723,723,9279,動詞,自立,*,*,五段・ガ行,基本形,せめぐ,セメグ,セメグ
-- せめが,725,725,9279,動詞,自立,*,*,五段・ガ行,未然形,せめぐ,セメガ,セメガ
-- せめご,724,724,9279,動詞,自立,*,*,五段・ガ行,未然ウ接続,せめぐ,セメゴ,セメゴ
-- せめぎ,728,728,9279,動詞,自立,*,*,五段・ガ行,連用形,せめぐ,セメギ,セメギ
-- せめい,727,727,9279,動詞,自立,*,*,五段・ガ行,連用タ接続,せめぐ,セメイ,セメイ
-- せめげ,721,721,9279,動詞,自立,*,*,五段・ガ行,仮定形,せめぐ,セメゲ,セメゲ
-- せめげ,726,726,9279,動詞,自立,*,*,五段・ガ行,命令ｅ,せめぐ,セメゲ,セメゲ
-- せめぎゃ,722,722,9279,動詞,自立,*,*,五段・ガ行,仮定縮約１,せめぐ,セメギャ,セメギャ

guEndings = map (\(a,b) -> (a, Just b))
       [ ("ぐ" , "基本形")
       , ("が" , "未然形")
       , ("ご" , "未然ウ接続")
       , ("ぎ" , "連用形")
       , ("い" , "連用タ接続")
       , ("げ" , "仮定形")
       , ("げ" , "命令ｅ")
       , ("ぎゃ", "仮定縮約１")]

-- 乗り通す,731,731,7150,動詞,自立,*,*,五段・サ行,基本形,乗り通す,ノリトオス,ノリトース
-- 乗り通さ,733,733,7150,動詞,自立,*,*,五段・サ行,未然形,乗り通す,ノリトオサ,ノリトーサ
-- 乗り通そ,732,732,7150,動詞,自立,*,*,五段・サ行,未然ウ接続,乗り通す,ノリトオソ,ノリトーソ
-- 乗り通し,735,735,7150,動詞,自立,*,*,五段・サ行,連用形,乗り通す,ノリトオシ,ノリトーシ
-- 乗り通せ,729,729,7150,動詞,自立,*,*,五段・サ行,仮定形,乗り通す,ノリトオセ,ノリトーセ
-- 乗り通せ,734,734,7150,動詞,自立,*,*,五段・サ行,命令ｅ,乗り通す,ノリトオセ,ノリトーセ
-- 乗り通しゃ,730,730,7150,動詞,自立,*,*,五段・サ行,仮定縮約１,乗り通す,ノリトオシャ,ノリトーシャ

suEndings = map (\(a,b) -> (a, Just b))
       [ ("す" , "基本形")
       , ("さ" , "未然形")
       , ("そ" , "未然ウ接続")
       , ("し" , "連用形")
       , ("せ" , "仮定形")
       , ("せ" , "命令ｅ")
       , ("しゃ", "仮定縮約１")]

-- ようだつ,738,738,9292,動詞,自立,*,*,五段・タ行,基本形,ようだつ,ヨウダツ,ヨウダツ
-- ようだた,740,740,9292,動詞,自立,*,*,五段・タ行,未然形,ようだつ,ヨウダタ,ヨウダタ
-- ようだと,739,739,9292,動詞,自立,*,*,五段・タ行,未然ウ接続,ようだつ,ヨウダト,ヨウダト
-- ようだち,743,743,9292,動詞,自立,*,*,五段・タ行,連用形,ようだつ,ヨウダチ,ヨウダチ
-- ようだっ,742,742,9308,動詞,自立,*,*,五段・タ行,連用タ接続,ようだつ,ヨウダッ,ヨウダッ
-- ようだて,736,736,9292,動詞,自立,*,*,五段・タ行,仮定形,ようだつ,ヨウダテ,ヨウダテ
-- ようだて,741,741,9292,動詞,自立,*,*,五段・タ行,命令ｅ,ようだつ,ヨウダテ,ヨウダテ
-- ようだちゃ,737,737,9292,動詞,自立,*,*,五段・タ行,仮定縮約１,ようだつ,ヨウダチャ,ヨウダチャ


tuEndings = map (\(a,b) -> (a, Just b))
       [ ("つ" , "基本形")
       , ("た" , "未然形")
       , ("と" , "未然ウ接続")
       , ("ち" , "連用形")
       , ("っ" , "連用タ接続")
       , ("て" , "仮定形")
       , ("て" , "命令ｅ")
       , ("ちゃ", "仮定縮約１")]

-- 往ぬ,746,746,6953,動詞,自立,*,*,五段・ナ行,基本形,往ぬ,イヌ,イヌ
-- 往な,748,748,6813,動詞,自立,*,*,五段・ナ行,未然形,往ぬ,イナ,イナ
-- 往の,747,747,7252,動詞,自立,*,*,五段・ナ行,未然ウ接続,往ぬ,イノ,イノ
-- 往に,751,751,7153,動詞,自立,*,*,五段・ナ行,連用形,往ぬ,イニ,イニ
-- 往ん,750,750,8161,動詞,自立,*,*,五段・ナ行,連用タ接続,往ぬ,イン,イン
-- 往ね,744,744,6797,動詞,自立,*,*,五段・ナ行,仮定形,往ぬ,イネ,イネ
-- 往ね,749,749,6797,動詞,自立,*,*,五段・ナ行,命令ｅ,往ぬ,イネ,イネ
-- 往にゃ,745,745,7150,動詞,自立,*,*,五段・ナ行,仮定縮約１,往ぬ,イニャ,イニャ

nuEndings = map (\(a,b) -> (a, Just b))
       [ ("ぬ" , "基本形")
       , ("な" , "未然形")
       , ("の" , "未然ウ接続")
       , ("に" , "連用形")
       , ("ん" , "連用タ接続")
       , ("ね" , "仮定形")
       , ("ね" , "命令ｅ")
       , ("にゃ", "仮定縮約１")]

-- はこぶ,754,754,9444,動詞,自立,*,*,五段・バ行,基本形,はこぶ,ハコブ,ハコブ
-- はこば,756,756,9280,動詞,自立,*,*,五段・バ行,未然形,はこぶ,ハコバ,ハコバ
-- はこぼ,755,755,9280,動詞,自立,*,*,五段・バ行,未然ウ接続,はこぶ,ハコボ,ハコボ
-- はこび,759,759,9282,動詞,自立,*,*,五段・バ行,連用形,はこぶ,ハコビ,ハコビ
-- はこん,758,758,9278,動詞,自立,*,*,五段・バ行,連用タ接続,はこぶ,ハコン,ハコン
-- はこべ,752,752,9280,動詞,自立,*,*,五段・バ行,仮定形,はこぶ,ハコベ,ハコベ
-- はこべ,757,757,9280,動詞,自立,*,*,五段・バ行,命令ｅ,はこぶ,ハコベ,ハコベ
-- はこびゃ,753,753,9280,動詞,自立,*,*,五段・バ行,仮定縮約１,はこぶ,ハコビャ,ハコビャ

buEndings = map (\(a,b) -> (a, Just b))
       [ ("ぶ" , "基本形")
       , ("ば" , "未然形")
       , ("ぼ" , "未然ウ接続")
       , ("び" , "連用形")
       , ("ん" , "連用タ接続")
       , ("べ" , "仮定形")
       , ("べ" , "命令ｅ")
       , ("びゃ", "仮定縮約１")]

-- きらめむ,762,762,9279,動詞,自立,*,*,五段・マ行,基本形,きらめむ,キラメム,キラメム
-- きらめま,764,764,9279,動詞,自立,*,*,五段・マ行,未然形,きらめむ,キラメマ,キラメマ
-- きらめも,763,763,9279,動詞,自立,*,*,五段・マ行,未然ウ接続,きらめむ,キラメモ,キラメモ
-- きらめみ,767,767,9279,動詞,自立,*,*,五段・マ行,連用形,きらめむ,キラメミ,キラメミ
-- きらめん,766,766,9279,動詞,自立,*,*,五段・マ行,連用タ接続,きらめむ,キラメン,キラメン
-- きらめめ,760,760,9279,動詞,自立,*,*,五段・マ行,仮定形,きらめむ,キラメメ,キラメメ
-- きらめめ,765,765,9279,動詞,自立,*,*,五段・マ行,命令ｅ,きらめむ,キラメメ,キラメメ
-- きらめみゃ,761,761,9279,動詞,自立,*,*,五段・マ行,仮定縮約１,きらめむ,キラメミャ,キラメミャ

muEndings = map (\(a,b) -> (a, Just b))
       [ ("む" , "基本形")
       , ("ま" , "未然形")
       , ("も" , "未然ウ接続")
       , ("み" , "連用形")
       , ("ん" , "連用タ接続")
       , ("め" , "仮定形")
       , ("め" , "命令ｅ")
       , ("みゃ", "仮定縮約１")]

-- かちあう,817,817,9280,動詞,自立,*,*,五段・ワ行促音便,基本形,かちあう,カチアウ,カチアウ
-- かちあわ,823,823,9279,動詞,自立,*,*,五段・ワ行促音便,未然形,かちあう,カチアワ,カチアワ
-- かちあお,820,820,9279,動詞,自立,*,*,五段・ワ行促音便,未然ウ接続,かちあう,カチアオ,カチアオ
-- かちあい,832,832,9296,動詞,自立,*,*,五段・ワ行促音便,連用形,かちあう,カチアイ,カチアイ
-- かちあっ,829,829,9279,動詞,自立,*,*,五段・ワ行促音便,連用タ接続,かちあう,カチアッ,カチアッ
-- かちあえ,814,814,9279,動詞,自立,*,*,五段・ワ行促音便,仮定形,かちあう,カチアエ,カチアエ
-- かちあえ,826,826,9279,動詞,自立,*,*,五段・ワ行促音便,命令ｅ,かちあう,カチアエ,カチアエ

uEndings = map (\(a,b) -> (a, Just b))
       [ ("う" , "基本形")
       , ("わ" , "未然形")
       , ("お" , "未然ウ接続")
       , ("い" , "連用形")
       , ("っ" , "連用タ接続")
       , ("え" , "仮定形")
       , ("え" , "命令ｅ")]

-- おくする,583,583,9279,動詞,自立,*,*,サ変・−スル,基本形,おくする,オクスル,オクスル
-- おくす,584,584,9279,動詞,自立,*,*,サ変・−スル,文語基本形,おくする,オクス,オクス
-- おくし,587,587,9279,動詞,自立,*,*,サ変・−スル,未然形,おくする,オクシ,オクシ
-- おくしよ,585,585,9279,動詞,自立,*,*,サ変・−スル,未然ウ接続,おくする,オクシヨ,オクシヨ
-- おくしょ,585,585,9279,動詞,自立,*,*,サ変・−スル,未然ウ接続,おくする,オクショ,オクショ
-- おくせ,586,586,9279,動詞,自立,*,*,サ変・−スル,未然レル接続,おくする,オクセ,オクセ
-- おくすれ,581,581,9279,動詞,自立,*,*,サ変・−スル,仮定形,おくする,オクスレ,オクスレ
-- おくせよ,589,589,9279,動詞,自立,*,*,サ変・−スル,命令ｙｏ,おくする,オクセヨ,オクセヨ
-- おくしろ,588,588,9279,動詞,自立,*,*,サ変・−スル,命令ｒｏ,おくする,オクシロ,オクシロ
-- おくすりゃ,582,582,9279,動詞,自立,*,*,サ変・−スル,仮定縮約１,おくする,オクスリャ,オクスリャ

makeSuruIMecabEntries
  :: (Surface, ReadingPhrase)
  -> [MecabEntry]
makeSuruIMecabEntries (s,rp) =
  [MecabEntry su i 7150 "動詞" (Just "自立") (Just "サ変・−スル") t10 s t12
   | su <- surfaces
   | t10 <- types
   | t12 <- readings]
  where
    i = 610
    stem = assert (T.isSuffixOf "する" s)
      (maybe "" identity $ T.stripSuffix "する" s)
    surfaces = map (\e -> stem <> e) endings
    readings = map (\e -> (T.init $ T.init $ getKatakana rp)
                     <> (hiraganaToKatakana e)) endings
    types = map Just
      [ "基本形"
      , "文語基本形"
      , "未然形"
      , "未然ウ接続"
      , "未然ウ接続"
      , "未然レル接続"
      , "仮定形"
      , "命令ｙｏ"
      , "命令ｒｏ"
      , "仮定縮約１"]

    endings =
      [ "する"
      , "す"
      , "し"
      , "しよ"
      , "しょ"
      , "せ"
      , "すれ"
      , "せよ"
      , "しろ"
      , "すりゃ"]

-- Adj.csv
-- t2, t3 (11, 146)
-- t4 (842, 9609)
-- t5 形容詞
-- ( fromList
--     [ Just "接尾"
--     , Just "自立"
--     , Just "非自立"
--     ]
-- , fromList [ Nothing ]
-- , fromList [ Nothing ]
-- , fromList
--     [ Just "不変化型"
--     , Just "形容詞・アウオ段"
--     , Just "形容詞・イイ"
--     , Just "形容詞・イ段"
--     ]
-- , fromList
--     [ Just "ガル接続"
--     , Just "仮定形"
--     , Just "仮定縮約１"
--     , Just "仮定縮約２"
--     , Just "体言接続"
--     , Just "命令ｅ"
--     , Just "基本形"
--     , Just "基本形-促音便"
--     , Just "文語基本形"
--     , Just "未然ウ接続"
--     , Just "未然ヌ接続"
--     , Just "連用ゴザイ接続"
--     , Just "連用タ接続"
--     , Just "連用テ接続"
--     ]
-- )

-- 赤い,19,19,4961,形容詞,自立,*,*,形容詞・アウオ段,基本形,赤い,アカイ,アカイ
-- 赤し,23,23,5085,形容詞,自立,*,*,形容詞・アウオ段,文語基本形,赤い,アカシ,アカシ
-- 赤から,27,27,4962,形容詞,自立,*,*,形容詞・アウオ段,未然ヌ接続,赤い,アカカラ,アカカラ
-- 赤かろ,25,25,4961,形容詞,自立,*,*,形容詞・アウオ段,未然ウ接続,赤い,アカカロ,アカカロ
-- 赤かっ,33,33,4961,形容詞,自立,*,*,形容詞・アウオ段,連用タ接続,赤い,アカカッ,アカカッ
-- 赤く,35,35,4961,形容詞,自立,*,*,形容詞・アウオ段,連用テ接続,赤い,アカク,アカク
-- 赤くっ,35,35,4961,形容詞,自立,*,*,形容詞・アウオ段,連用テ接続,赤い,アカクッ,アカクッ
-- 赤う,31,31,4965,形容詞,自立,*,*,形容詞・アウオ段,連用ゴザイ接続,赤い,アカウ,アカー
-- 赤ぅ,31,31,4961,形容詞,自立,*,*,形容詞・アウオ段,連用ゴザイ接続,赤い,アカゥ,アカー
-- 赤き,21,21,4961,形容詞,自立,*,*,形容詞・アウオ段,体言接続,赤い,アカキ,アカキ
-- 赤けれ,13,13,4961,形容詞,自立,*,*,形容詞・アウオ段,仮定形,赤い,アカケレ,アカケレ
-- 赤かれ,29,29,4961,形容詞,自立,*,*,形容詞・アウオ段,命令ｅ,赤い,アカカレ,アカカレ
-- 赤けりゃ,15,15,4961,形容詞,自立,*,*,形容詞・アウオ段,仮定縮約１,赤い,アカケリャ,アカケリャ
-- 赤きゃ,17,17,4961,形容詞,自立,*,*,形容詞・アウオ段,仮定縮約２,赤い,アカキャ,アカキャ
-- 赤,11,11,5836,形容詞,自立,*,*,形容詞・アウオ段,ガル接続,赤い,アカ,アカ


-- 小ざかしい,43,43,4682,形容詞,自立,*,*,形容詞・イ段,基本形,小ざかしい,コザカシイ,コザカシイ
-- 小ざかし,45,45,4682,形容詞,自立,*,*,形容詞・イ段,文語基本形,小ざかしい,コザカシ,コザカシ
-- 小ざかしから,47,47,4682,形容詞,自立,*,*,形容詞・イ段,未然ヌ接続,小ざかしい,コザカシカラ,コザカシカラ
-- 小ざかしかろ,46,46,4682,形容詞,自立,*,*,形容詞・イ段,未然ウ接続,小ざかしい,コザカシカロ,コザカシカロ
-- 小ざかしかっ,50,50,4682,形容詞,自立,*,*,形容詞・イ段,連用タ接続,小ざかしい,コザカシカッ,コザカシカッ
-- 小ざかしく,51,51,4682,形容詞,自立,*,*,形容詞・イ段,連用テ接続,小ざかしい,コザカシク,コザカシク
-- 小ざかしくっ,51,51,4682,形容詞,自立,*,*,形容詞・イ段,連用テ接続,小ざかしい,コザカシクッ,コザカシクッ
-- 小ざかしゅう,49,49,4682,形容詞,自立,*,*,形容詞・イ段,連用ゴザイ接続,小ざかしい,コザカシュウ,コザカシュー
-- 小ざかしゅぅ,49,49,4682,形容詞,自立,*,*,形容詞・イ段,連用ゴザイ接続,小ざかしい,コザカシュゥ,コザカシュー
-- 小ざかしき,44,44,4682,形容詞,自立,*,*,形容詞・イ段,体言接続,小ざかしい,コザカシキ,コザカシキ
-- 小ざかしけれ,40,40,4682,形容詞,自立,*,*,形容詞・イ段,仮定形,小ざかしい,コザカシケレ,コザカシケレ
-- 小ざかしかれ,48,48,4682,形容詞,自立,*,*,形容詞・イ段,命令ｅ,小ざかしい,コザカシカレ,コザカシカレ
-- 小ざかしけりゃ,41,41,4682,形容詞,自立,*,*,形容詞・イ段,仮定縮約１,小ざかしい,コザカシケリャ,コザカシケリャ
-- 小ざかしきゃ,42,42,4682,形容詞,自立,*,*,形容詞・イ段,仮定縮約２,小ざかしい,コザカシキャ,コザカシキャ
-- 小ざかし,39,39,4682,形容詞,自立,*,*,形容詞・イ段,ガル接続,小ざかしい,コザカシ,コザカシ


-- 赤う,31,31,4965,形容詞,自立,*,*,形容詞・アウオ段,連用ゴザイ接続,赤い,アカウ,アカー
-- 赤ぅ,31,31,4961,形容詞,自立,*,*,形容詞・アウオ段,連用ゴザイ接続,赤い,アカゥ,アカー
-- 小ざかしゅう,49,49,4682,形容詞,自立,*,*,形容詞・イ段,連用ゴザイ接続,小ざかしい,コザカシュウ,コザカシュー
-- 小ざかしゅぅ,49,49,4682,形容詞,自立,*,*,形容詞・イ段,連用ゴザイ接続,小ざかしい,コザカシュゥ,コザカシュー
makeAdjMecabEntries
  :: (Surface, ReadingPhrase)
  -> Bool
  -> [MecabEntry]
makeAdjMecabEntries (s,rp) isSuffix =
  [MecabEntry su i 6956 "形容詞" t6 t9 t10 s t12
   | su <- surfaces
   | t10 <- adjTypes
   | t12 <- readings]

  where
    i = 40
    stem = if (T.last s == 'い')
      then (T.init s)
      else error (show s)
    t6 = Just $ if isSuffix
      then "接尾"
      else "自立"
    t9 = Just $ if aou
      then "形容詞・アウオ段"
      else "形容詞・イ段"

    endings = (if aou then aouEndings else iEndings)
    surfaces = map (\e -> stem <> e) endings
    readings = map (\e -> (T.init $ getKatakana rp)
                     <> (hiraganaToKatakana e)) endings

    aou = not $ elem (T.last stem) ['し', 'じ', 'ち', 'き']
    adjTypes = map Just
      [ "基本形"
      , "文語基本形"
      , "未然ヌ接続"
      , "未然ウ接続"
      , "連用タ接続"
      , "連用テ接続"
      , "連用テ接続"
      , "連用ゴザイ接続"
      , "連用ゴザイ接続"
      , "体言接続"
      , "仮定形"
      , "命令ｅ"
      , "仮定縮約１"
      , "仮定縮約２"
      , "ガル接続"]

    aouEndings =
      [ "い"
      , "し"
      , "から"
      , "かろ"
      , "かっ"
      , "く"
      , "くっ"
      , "う"
      , "ぅ"
      , "き"
      , "けれ"
      , "かれ"
      , "けり"
      , "きゃ"
      , "" ]

    iEndings =
      [ "い"
      , ""
      , "から"
      , "かろ"
      , "かっ"
      , "く"
      , "くっ"
      , "ゅう"
      , "ゅぅ"
      , "き"
      , "けれ"
      , "かれ"
      , "けり"
      , "きゃ"
      , "" ]


-- Noun.csv
-- t2, t3 (1285, 1285)
-- t4 (-19662, 16360)
-- t5 名詞
-- t6 "一般"
-- t7 Nothing
-- t8 Nothing
-- t9 Nothing
-- t10 Nothing

type Surface = Text
-- For expressions, always make noun entry
makeNounMecabEntry
  :: (Surface, ReadingPhrase)
  -> MecabEntry
makeNounMecabEntry (s, rp) = MecabEntry
  s
  1285
  7650
  "名詞"
  (Just "一般")
  Nothing
  Nothing
  s
  (getKatakana rp)

-- Noun.adj.csv
-- t5 名詞
-- t6 形容動詞語幹
makeNounAdjMecabEntry
  :: (Surface, ReadingPhrase)
  -> MecabEntry
makeNounAdjMecabEntry (s, rp) = MecabEntry
  s
  1285
  7650
  "名詞"
  (Just "形容動詞語幹")
  Nothing
  Nothing
  s
  (getKatakana rp)

-- Noun.adverbal.csv
-- t5 名詞
-- t6 副詞可能

makeNounAdvMecabEntry
  :: (Surface, ReadingPhrase)
  -> MecabEntry
makeNounAdvMecabEntry (s, rp) = MecabEntry
  s
  1285
  7650
  "名詞"
  (Just "副詞可能")
  Nothing
  Nothing
  s
  (getKatakana rp)

-- Adverb.csv
-- t5 副詞
-- t6 "一般", "助詞類接続"

makeAdvMecabEntry
  :: (Surface, ReadingPhrase)
  -> MecabEntry
makeAdvMecabEntry (s, rp) = MecabEntry
  s
  1285
  7650
  "副詞"
  (Just "一般")
  Nothing
  Nothing
  s
  (getKatakana rp)
